From 57be5c1da32973e83079477d5a0b0b194621232a Mon Sep 17 00:00:00 2001
From: Aurelio Colosimo <aurelio@aureliocolosimo.it>
Date: Sun, 22 Nov 2015 10:15:48 +0100
Subject: [PATCH 58/83] MCUIO shields: drivers rewritten with irq gpios defined
 as labels

Signed-off-by: Aurelio Colosimo <aurelio@aureliocolosimo.it>
---
 drivers/mcuio/mcuio-dio-shield.c     | 33 +++++++++++++++++++++------------
 drivers/mcuio/mcuio-dogoled-shield.c |  2 +-
 drivers/mcuio/mcuio-lucky-shield.c   | 28 +++++++++++++++++++---------
 drivers/mcuio/mcuio-shields.h        |  3 ++-
 4 files changed, 43 insertions(+), 23 deletions(-)

diff --git a/drivers/mcuio/mcuio-dio-shield.c b/drivers/mcuio/mcuio-dio-shield.c
index 877bc87..11eab19 100644
--- a/drivers/mcuio/mcuio-dio-shield.c
+++ b/drivers/mcuio/mcuio-dio-shield.c
@@ -39,7 +39,7 @@ module_param(pca9555_base, uint, 0644);
 static struct pca953x_platform_data pca9555_plat;
 
 static struct mcuio_shld_i2c_info i2c_lst[] = {
-	MCUIO_SHLD_I2C_DEV("pca9555", &pca9555_addr, &pca9555_plat, 111),
+	MCUIO_SHLD_I2C_DEV("pca9555", &pca9555_addr, &pca9555_plat, "D8"),
 };
 
 static int mcuio_dio_probe(struct mcuio_device *mdev)
@@ -73,17 +73,26 @@ static int mcuio_dio_probe(struct mcuio_device *mdev)
 		i = &data->i2c_info[cnt];
 		i->info.addr = *i->paddr;
 
-		/* HACK this is needed to enable pullup */
-		ret = devm_gpio_request_one(&mdev->dev, i->gpio_irq, GPIOF_DIR_IN,
-				    "digitalio-shield");
-		if (ret < 0)
-			return ret;
-		gpio_direction_output(i->gpio_irq, 1);
-		gpio_direction_input(i->gpio_irq);
-		devm_gpio_free(&mdev->dev, i->gpio_irq);
-
-		i->info.irq = (i->gpio_irq >= 0) ?
-			gpio_to_irq(i->gpio_irq) : 0;
+		if (strlen(i->gpio_irq_label)) {
+			int gpio;
+			gpio = mcuio_get_gpio_nr(i->gpio_irq_label);
+			if (gpio < 0) {
+				dev_err(&mdev->dev, "gpio %s not found\n",
+					i->gpio_irq_label);
+				return -EINVAL;
+			}
+
+			/* HACK this is needed to enable pullup */
+			ret = devm_gpio_request_one(&mdev->dev, gpio,
+				GPIOF_DIR_IN, "digitalio-shield");
+			if (ret < 0)
+				return ret;
+			gpio_direction_output(gpio, 1);
+			gpio_direction_input(gpio);
+			devm_gpio_free(&mdev->dev, gpio);
+
+			i->info.irq = gpio_to_irq(gpio);
+		}
 
 		i->i2c_client = i2c_new_device(data->i2c_adap, &i->info);
 		if (!i->i2c_client)
diff --git a/drivers/mcuio/mcuio-dogoled-shield.c b/drivers/mcuio/mcuio-dogoled-shield.c
index 1daa310..ca6a903 100644
--- a/drivers/mcuio/mcuio-dogoled-shield.c
+++ b/drivers/mcuio/mcuio-dogoled-shield.c
@@ -46,7 +46,7 @@ static struct ssd1307_platform_data ssd1307_plat = {
 };
 
 static struct mcuio_shld_i2c_info i2c_lst[] = {
-	MCUIO_SHLD_I2C_DEV("ssd1307fb", &ssd1307_addr, &ssd1307_plat, -1),
+	MCUIO_SHLD_I2C_DEV("ssd1307fb", &ssd1307_addr, &ssd1307_plat, ""),
 };
 
 static int mcuio_dogoled_probe(struct mcuio_device *mdev)
diff --git a/drivers/mcuio/mcuio-lucky-shield.c b/drivers/mcuio/mcuio-lucky-shield.c
index 7202876..0e9aea7 100644
--- a/drivers/mcuio/mcuio-lucky-shield.c
+++ b/drivers/mcuio/mcuio-lucky-shield.c
@@ -66,19 +66,20 @@ static struct ssd1307_platform_data ssd1307_plat = {
 static struct pca953x_platform_data pca9555_plat;
 
 static struct mcuio_shld_i2c_info i2c_lst[] = {
-	MCUIO_SHLD_I2C_DEV("pca9555", &pca9555_addr, &pca9555_plat, 115),
-	MCUIO_SHLD_I2C_DEV("mpl3115", &mpl3115_addr, NULL, -1),
-	MCUIO_SHLD_I2C_DEV("mma8491", &mma8491_addr, &mma8491_rst, -1),
-	MCUIO_SHLD_I2C_DEV("mag3110", &mag3110_addr, NULL, -1),
-	MCUIO_SHLD_I2C_DEV("sht21", &sht21_addr, NULL, -1),
-	MCUIO_SHLD_I2C_DEV("ssd1307fb", &ssd1307_addr, &ssd1307_plat, -1),
-	MCUIO_SHLD_I2C_DEV("bme280", &bme280_addr, NULL, -1),
+	MCUIO_SHLD_I2C_DEV("pca9555", &pca9555_addr, &pca9555_plat, "D12"),
+	MCUIO_SHLD_I2C_DEV("mpl3115", &mpl3115_addr, NULL, ""),
+	MCUIO_SHLD_I2C_DEV("mma8491", &mma8491_addr, &mma8491_rst, ""),
+	MCUIO_SHLD_I2C_DEV("mag3110", &mag3110_addr, NULL, ""),
+	MCUIO_SHLD_I2C_DEV("sht21", &sht21_addr, NULL, ""),
+	MCUIO_SHLD_I2C_DEV("ssd1307fb", &ssd1307_addr, &ssd1307_plat, ""),
+	MCUIO_SHLD_I2C_DEV("bme280", &bme280_addr, NULL, ""),
 };
 
 static int mcuio_lucky_probe(struct mcuio_device *mdev)
 {
 	struct mcuio_shld_i2c_info *i;
 	int cnt;
+	int ret;
 
 	struct mcuio_shld_data *data;
 
@@ -106,8 +107,17 @@ static int mcuio_lucky_probe(struct mcuio_device *mdev)
 	for (cnt = 0; cnt < data->i2c_cnt; cnt++) {
 		i = &data->i2c_info[cnt];
 		i->info.addr = *i->paddr;
-		i->info.irq = (i->gpio_irq >= 0) ?
-			gpio_to_irq(i->gpio_irq) : 0;
+		if (strlen(i->gpio_irq_label)) {
+			int gpio;
+			gpio = mcuio_get_gpio_nr(i->gpio_irq_label);
+			if (gpio < 0) {
+				dev_err(&mdev->dev, "gpio %s not found\n",
+					i->gpio_irq_label);
+				return -EINVAL;
+			}
+
+			i->info.irq = gpio_to_irq(gpio);
+		}
 
 		i->i2c_client = i2c_new_device(data->i2c_adap, &i->info);
 
diff --git a/drivers/mcuio/mcuio-shields.h b/drivers/mcuio/mcuio-shields.h
index 4ec0515..9da3179 100644
--- a/drivers/mcuio/mcuio-shields.h
+++ b/drivers/mcuio/mcuio-shields.h
@@ -7,6 +7,7 @@ struct mcuio_shld_i2c_info {
 	unsigned short *paddr;
 	struct i2c_client *i2c_client;
 	struct i2c_board_info info;
+	const char *gpio_irq_label;
 	int gpio_irq;
 };
 
@@ -17,7 +18,7 @@ struct mcuio_shld_data {
 };
 
 #define MCUIO_SHLD_I2C_DEV(t, pa, p, g) \
-	{.paddr = pa, .gpio_irq = g,\
+	{.paddr = pa, .gpio_irq_label = g,\
 		.info = {.platform_data = p, .type = t}}
 
 #endif /* __MCUIO_SHIELDS_H__ */
-- 
2.10.1

